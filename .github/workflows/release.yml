name: release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Install package
        run: |
          pip install -e .

      - name: Run tests
        run: pytest -q

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build wheel
        run: |
          python -m pip install --upgrade pip build
          python -m build

      - name: Set variables
        run: |
          echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
          echo "IMAGE=ghcr.io/natediesel/content365:${VERSION}" >> $GITHUB_ENV
          echo "IMAGE_LATEST=ghcr.io/natediesel/content365:latest" >> $GITHUB_ENV

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and tag image
        run: |
          docker build -t ${IMAGE} -t ${IMAGE_LATEST} .

      - name: Smoke image
        run: |
          docker run --rm ${IMAGE} --version

      - name: Push images
        run: |
          docker push ${IMAGE}
          docker push ${IMAGE_LATEST}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/*.whl
