
from reportlab.lib.pagesizes import letter
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, PageBreak, Image, HRFlowable
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.enums import TA_CENTER
from reportlab.lib.units import inch
import os
import re
import uuid

def clean_text(text):
    clean = re.sub(r"\s+", " ", text or "")
    clean = clean.replace("\\n", " ").replace("\n", " ").strip()
    return clean

def generate_pdf(content_dict, output_dir="generated_pdfs"):
    os.makedirs(output_dir, exist_ok=True)
    filename = f"{uuid.uuid4().hex}.pdf"
    filepath = os.path.join(output_dir, filename)

    doc = SimpleDocTemplate(filepath, pagesize=letter, title="Content365 Marketing Pack")
    styles = getSampleStyleSheet()
    custom_heading = ParagraphStyle(
        name="HeadingCenter",
        parent=styles["Heading1"],
        alignment=TA_CENTER,
        spaceAfter=10
    )
    footer_style = ParagraphStyle("Footer", fontSize=8, alignment=TA_CENTER, spaceBefore=20)

    flowables = []

    # Add logo if exists
    logo_path = "static/logo.png"
    if os.path.exists(logo_path):
        img = Image(logo_path, width=1.5*inch, height=1.5*inch)
        img.hAlign = "CENTER"
        flowables.append(img)
        flowables.append(Spacer(1, 0.2 * inch))

    def add_section(title, text, emoji="‚ú®"):
        flowables.append(HRFlowable(width="100%", thickness=1, color="#cccccc"))
        flowables.append(Spacer(1, 0.1 * inch))
        flowables.append(Paragraph(f"{emoji} <b>{title}</b>", custom_heading))
        flowables.append(Spacer(1, 0.2 * inch))
        flowables.append(Paragraph(clean_text(text), styles["Normal"]))
        flowables.append(Spacer(1, 0.3 * inch))

    # Core Sections
    add_section("Blog Post", content_dict.get("blog_post", ""), "üìù")
    add_section("Lead Magnet", content_dict.get("lead_magnet", ""), "üì¶")
    add_section("SEO Keywords", ", ".join(content_dict.get("seo_keywords", [])), "üîç")

    # Social Captions (platform grouped)
    social_captions = content_dict.get("social_captions", {})
    for platform, captions in social_captions.items():
        if captions:
            add_section(f"{platform} Captions", "\n\n".join(captions), "üì£")

    # Hashtags (platform grouped)
    hashtags = content_dict.get("hashtags", {})
    for platform, tags in hashtags.items():
        if tags:
            add_section(f"{platform} Hashtags", " ".join(tags), "üè∑Ô∏è")

    # Premium Tips if included
    if "premium_tips" in content_dict:
        add_section("Pro Tips", "\n".join(content_dict["premium_tips"]), "üí°")

    # Footer
    flowables.append(Spacer(1, 0.2 * inch))
    flowables.append(HRFlowable(width="100%", thickness=0.5, color="#dddddd"))
    flowables.append(Spacer(1, 0.1 * inch))
    flowables.append(Paragraph("Generated by Content365.xyz ‚Äì ¬© 2025", footer_style))

    doc.build(flowables)
    return filename
